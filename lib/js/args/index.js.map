{"version":3,"sources":["../../../src/js/args/index.js"],"names":["Args","details","commands","options","examples","config","help","usageFilter","value","name","mainColor","subColor","printMainColor","i","printSubColor","parent","module","publicMethods","command","option","parse","example","showHelp","util","utils","hasOwnProperty","call","prototype","method"],"mappings":"4xBAmBe,QAASA,KAAT,EAAgB,CAC7B,KAAKC,OAAL,CAAe,CACbC,SAAU,EADG,CAEbC,QAAS,EAFI,CAGbC,SAAU,EAHG,CADc,CAQ7B,KAAKC,MAAL,CAAc,CACZC,OADY,CAEZC,YAAa,IAFD,CAGZC,MAAO,IAHK,CAIZC,KAAM,IAJM,CAKZC,UAAW,QALC,CAMZC,SAAU,KANE,CARe,CAiB7B,KAAKC,cAAL,CAAsB,kBAAKC,EAAL,CAjBO,CAkB7B,KAAKC,aAAL,CAAqB,kBAAKD,EAAL,CAlBQ,CAoB7B,KAAKE,MAAL,CAAcC,OAAOD,MACtB,C,uEArBuBf,I,+UAVlBiB,cAAgB,CACpBC,yBADoB,CAEpBC,uBAFoB,CAGpBhB,yBAHoB,CAIpBiB,qBAJoB,CAKpBC,yBALoB,CAMpBjB,2BANoB,CAOpBkB,uBAPoB,C,CAkCtB,IAAK,GAAMC,KAAX,GAAmBC,gBAAnB,CACO,KAAGC,cAAH,CAAkBC,IAAlB,CAAuBF,eAAvB,CAA8BD,IAA9B,CADP,GAKEvB,KAAK2B,SAAL,CAAeJ,IAAf,EAAuBC,gBAAMD,IAAN,CALzB,EASA,IAAK,GAAMK,OAAX,GAAqBX,cAArB,CACO,KAAGQ,cAAH,CAAkBC,IAAlB,CAAuBT,aAAvB,CAAsCW,MAAtC,CADP,GAKE5B,KAAK2B,SAAL,CAAeC,MAAf,EAAyBX,cAAcW,MAAd,CAL3B,C","file":"index.js","sourcesContent":["import parse from './parse';\nimport example from './example';\nimport examples from './examples';\nimport options from './options';\nimport option from './option';\nimport command from './command';\nimport showHelp from './help';\nimport utils from './utils';\n\nconst publicMethods = {\n  command,\n  option,\n  options,\n  parse,\n  example,\n  examples,\n  showHelp,\n};\n\nexport default function Args() {\n  this.details = {\n    commands: [],\n    options: [],\n    examples: [],\n  };\n\n  // Configuration defaults\n  this.config = {\n    help: true,\n    usageFilter: null,\n    value: null,\n    name: null,\n    mainColor: 'yellow',\n    subColor: 'dim',\n  };\n\n  this.printMainColor = i => i;\n  this.printSubColor = i => i;\n\n  this.parent = module.parent;\n}\n\n// Assign internal helpers\nfor (const util in utils) {\n  if (!{}.hasOwnProperty.call(utils, util)) {\n    continue; // eslint-disable-line\n  }\n\n  Args.prototype[util] = utils[util];\n}\n\n// Assign public methods\nfor (const method in publicMethods) {\n  if (!{}.hasOwnProperty.call(publicMethods, method)) {\n    continue; // eslint-disable-line\n  }\n\n  Args.prototype[method] = publicMethods[method];\n}\n"]}